# Upstream for the two PacMusic application instances
upstream pacmusic_servers {
    server pacmusic-1:5000;
    server pacmusic-2:5000;
}

# This single server block handles validation for BOTH domains on port 80.
server {
    listen 80;
    # IMPORTANT: Replace <YOUR_IP> with your server's public IP address
    server_name stg.pacmusic.15.134.86.46.nip.io pacmusic.<YOUR_IP>.nip.io;

    # Route for Let's Encrypt validation.
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # For all other traffic to the staging domain, redirect to HTTPS.
    location / {
        if ($host = stg.pacmusic.15.134.86.46.nip.io) {
            return 301 https://$host$request_uri;
        }
        # Requests for the production domain on port 80 will be blocked.
        return 404;
    }
}

# This block handles the final, secure HTTPS traffic for staging.
server {
    listen 443 ssl;
    # IMPORTANT: Replace <YOUR_IP> with your server's public IP address
    server_name stg.pacmusic.15.134.86.46.nip.io;

    ssl_certificate /etc/letsencrypt/live/stg.pacmusic.<YOUR_IP>.nip.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/stg.pacmusic.<YOUR_IP>.nip.io/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass http://pacmusic_servers;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# This block listens on port 8080 for production traffic.
server {
    listen 8080;
    # IMPORTANT: Replace <YOUR_IP> with your server's public IP address
    server_name pacmusic.15.134.86.46.nip.io;
    
    location / {
        proxy_pass http://pacmusic_servers;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
