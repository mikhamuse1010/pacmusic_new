# Upstream for the two PacMusic application instances
upstream pacmusic_servers {
    server pacmusic-1:5000;
    server pacmusic-2:5000;
}

# This single server block handles validation for BOTH domains on port 80.
server {
    listen 80;
    # Listen for requests for both the staging and production domains.
    server_name stg-pacmusicmikha.duckdns.org pacmusicmikha.duckdns.org;

    # Route for Let's Encrypt validation.
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # For all other traffic to the staging domain, redirect to HTTPS.
    location / {
        if ($host = stg-pacmusicmikha.duckdns.org) {
            return 301 https://$host$request_uri;
        }
        # Requests for the production domain on port 80 will be blocked here.
        # This is fine because production is on port 8080.
        return 404;
    }
}

# This block handles the final, secure HTTPS traffic for staging.
server {
    listen 443 ssl;
    server_name stg-pacmusicmikha.duckdns.org;

    ssl_certificate /etc/letsencrypt/live/stg-pacmusicmikha.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/stg-pacmusicmikha.duckdns.org/privkey.pem;

    location / {
        proxy_pass http://pacmusic_servers;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# This block listens on port 8080 for production traffic.
server {
    listen 8080;
    server_name pacmusicmikha.duckdns.org;
    
    location / {
        proxy_pass http://pacmusic_servers;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
