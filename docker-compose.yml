# This is the base file. It defines the services that are common
# across all environments. By removing container_name, we allow Docker
# to create unique names for each environment, preventing conflicts.

services:
  # NGINX Load Balancer Service
  nginx:
    image: nginx:latest
    # The nginx.conf file will be mounted from the host
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - pacmusic-network
    # NGINX depends on both application instances being available
    depends_on:
      - pacmusic-1
      - pacmusic-2

  # PostgreSQL Database Service
  postgres:
    image: postgres:latest
    # Database credentials will be loaded from the .env file
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      # Mount a volume to persist database data
      - postgres-data:/var/lib/postgresql/data
      # Mount the initialization script to create tables and data on first run
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - pacmusic-network

volumes:
  postgres-data:
    # Giving the volume a static name means both stg and prod will try to use it.
    # For true isolation, this should be defined per-environment or named dynamically.
    # For this project, we'll keep it simple and they will share the volume.
    name: postgres-data

networks:
  pacmusic-network:
    name: pacmusic-network
