# This single file defines the entire application stack, including Certbot for SSL.
services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      # Mount the new unified NGINX configuration and the init script.
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/init-letsencrypt.sh:/init-letsencrypt.sh
      # Share volumes with Certbot to access certificates and validation files.
      - certbot_certs:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    networks:
      - pacmusic-network
    # This new command runs the init script before starting NGINX.
    command: /bin/bash -c "/init-letsencrypt.sh && nginx -g 'daemon off;'"

  certbot:
    image: certbot/certbot
    volumes:
      - certbot_certs:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    # The command is now set to run every 12 hours to automatically renew certificates.
    command: renew --pre-hook "service nginx stop" --post-hook "service nginx start"

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      # Use a named volume to make database data persistent.
      - postgres-data:/var/lib/postgresql/data
    networks:
      - pacmusic-network

  pacmusic-1:
    build:
      context: ./app
    container_name: pacmusic-1 # Fixed name for easier reference by NGINX
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
    networks:
      - pacmusic-network
    depends_on:
      - postgres

  pacmusic-2:
    build:
      context: ./app
    container_name: pacmusic-2 # Fixed name for easier reference by NGINX
    environment:
      POSTG...
[Immersive content redacted for brevity.]
